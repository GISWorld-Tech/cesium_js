!function(t,i){"object"==typeof exports&&"undefined"!=typeof module?module.exports=i():"function"==typeof define&&define.amd?define(i):(t="undefined"!=typeof globalThis?globalThis:t||self).RBush=i()}(this,(function(){"use strict";function t(t,n,h,r,a){i(t,n,h||0,r||t.length-1,a||e)}function i(t,e,h,r,a){for(;r>h;){if(r-h>600){var s=r-h+1,o=e-h+1,l=Math.log(s),c=.5*Math.exp(2*l/3),m=.5*Math.sqrt(l*c*(s-c)/s)*(o-s/2<0?-1:1);i(t,e,Math.max(h,Math.floor(e-o*c/s+m)),Math.min(r,Math.floor(e+(s-o)*c/s+m)),a)}var f=t[e],u=h,d=r;for(n(t,h,e),a(t[r],f)>0&&n(t,h,r);u<d;){for(n(t,u,d),u++,d--;a(t[u],f)<0;)u++;for(;a(t[d],f)>0;)d--}0===a(t[h],f)?n(t,h,d):n(t,++d,r),d<=e&&(h=d+1),e<=d&&(r=d-1)}}function n(t,i,n){var e=t[i];t[i]=t[n],t[n]=e}function e(t,i){return t<i?-1:t>i?1:0}function h(t,i,n){if(!n)return i.indexOf(t);for(let e=0;e<i.length;e++)if(n(t,i[e]))return e;return-1}function r(t,i){a(t,0,t.children.length,i,t)}function a(t,i,n,e,h){h||(h=x(null)),h.minX=1/0,h.minY=1/0,h.maxX=-1/0,h.maxY=-1/0;for(let r=i;r<n;r++){const i=t.children[r];s(h,t.leaf?e(i):i)}return h}function s(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function o(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function c(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function m(t){return t.maxX-t.minX+(t.maxY-t.minY)}function f(t,i){const n=Math.max(t.minX,i.minX),e=Math.max(t.minY,i.minY),h=Math.min(t.maxX,i.maxX),r=Math.min(t.maxY,i.maxY);return Math.max(0,h-n)*Math.max(0,r-e)}function u(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function d(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function x(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function p(i,n,e,h,r){const a=[n,e];for(;a.length;){if((e=a.pop())-(n=a.pop())<=h)continue;const s=n+Math.ceil((e-n)/h/2)*h;t(i,s,n,e,r),a.push(n,s,s,e)}}return class{constructor(t=9){this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}all(){return this._all(this.data,[])}search(t){let i=this.data;const n=[];if(!d(t,i))return n;const e=this.toBBox,h=[];for(;i;){for(let r=0;r<i.children.length;r++){const a=i.children[r],s=i.leaf?e(a):a;d(t,s)&&(i.leaf?n.push(a):u(t,s)?this._all(a,n):h.push(a))}i=h.pop()}return n}collides(t){let i=this.data;if(!d(t,i))return!1;const n=[];for(;i;){for(let e=0;e<i.children.length;e++){const h=i.children[e],r=i.leaf?this.toBBox(h):h;if(d(t,r)){if(i.leaf||u(t,r))return!0;n.push(h)}}i=n.pop()}return!1}load(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(let i=0;i<t.length;i++)this.insert(t[i]);return this}let i=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===i.height)this._splitRoot(this.data,i);else{if(this.data.height<i.height){const t=this.data;this.data=i,i=t}this._insert(i,this.data.height-i.height-1,!0)}else this.data=i;return this}insert(t){return t&&this._insert(t,this.data.height-1),this}clear(){return this.data=x([]),this}remove(t,i){if(!t)return this;let n=this.data;const e=this.toBBox(t),r=[],a=[];let s,o,l;for(;n||r.length;){if(n||(n=r.pop(),o=r[r.length-1],s=a.pop(),l=!0),n.leaf){const e=h(t,n.children,i);if(-1!==e)return n.children.splice(e,1),r.push(n),this._condense(r),this}l||n.leaf||!u(n,e)?o?(s++,n=o.children[s],l=!1):n=null:(r.push(n),a.push(s),s=0,o=n,n=n.children[0])}return this}toBBox(t){return t}compareMinX(t,i){return t.minX-i.minX}compareMinY(t,i){return t.minY-i.minY}toJSON(){return this.data}fromJSON(t){return this.data=t,this}_all(t,i){const n=[];for(;t;)t.leaf?i.push(...t.children):n.push(...t.children),t=n.pop();return i}_build(t,i,n,e){const h=n-i+1;let a,s=this._maxEntries;if(h<=s)return a=x(t.slice(i,n+1)),r(a,this.toBBox),a;e||(e=Math.ceil(Math.log(h)/Math.log(s)),s=Math.ceil(h/Math.pow(s,e-1))),a=x([]),a.leaf=!1,a.height=e;const o=Math.ceil(h/s),l=o*Math.ceil(Math.sqrt(s));p(t,i,n,l,this.compareMinX);for(let h=i;h<=n;h+=l){const i=Math.min(h+l-1,n);p(t,h,i,o,this.compareMinY);for(let n=h;n<=i;n+=o){const h=Math.min(n+o-1,i);a.children.push(this._build(t,n,h,e-1))}}return r(a,this.toBBox),a}_chooseSubtree(t,i,n,e){for(;e.push(i),!i.leaf&&e.length-1!==n;){let n,e=1/0,a=1/0;for(let s=0;s<i.children.length;s++){const o=i.children[s],l=c(o),m=(h=t,r=o,(Math.max(r.maxX,h.maxX)-Math.min(r.minX,h.minX))*(Math.max(r.maxY,h.maxY)-Math.min(r.minY,h.minY))-l);m<a?(a=m,e=l<e?l:e,n=o):m===a&&l<e&&(e=l,n=o)}i=n||i.children[0]}var h,r;return i}_insert(t,i,n){const e=n?t:this.toBBox(t),h=[],r=this._chooseSubtree(e,this.data,i,h);for(r.children.push(t),s(r,e);i>=0&&h[i].children.length>this._maxEntries;)this._split(h,i),i--;this._adjustParentBBoxes(e,h,i)}_split(t,i){const n=t[i],e=n.children.length,h=this._minEntries;this._chooseSplitAxis(n,h,e);const a=this._chooseSplitIndex(n,h,e),s=x(n.children.splice(a,n.children.length-a));s.height=n.height,s.leaf=n.leaf,r(n,this.toBBox),r(s,this.toBBox),i?t[i-1].children.push(s):this._splitRoot(n,s)}_splitRoot(t,i){this.data=x([t,i]),this.data.height=t.height+1,this.data.leaf=!1,r(this.data,this.toBBox)}_chooseSplitIndex(t,i,n){let e,h=1/0,r=1/0;for(let s=i;s<=n-i;s++){const i=a(t,0,s,this.toBBox),o=a(t,s,n,this.toBBox),l=f(i,o),m=c(i)+c(o);l<h?(h=l,e=s,r=m<r?m:r):l===h&&m<r&&(r=m,e=s)}return e||n-i}_chooseSplitAxis(t,i,n){const e=t.leaf?this.compareMinX:o,h=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,e)<this._allDistMargin(t,i,n,h)&&t.children.sort(e)}_allDistMargin(t,i,n,e){t.children.sort(e);const h=this.toBBox,r=a(t,0,i,h),o=a(t,n-i,n,h);let l=m(r)+m(o);for(let e=i;e<n-i;e++){const i=t.children[e];s(r,t.leaf?h(i):i),l+=m(r)}for(let e=n-i-1;e>=i;e--){const i=t.children[e];s(o,t.leaf?h(i):i),l+=m(o)}return l}_adjustParentBBoxes(t,i,n){for(let e=n;e>=0;e--)s(i[e],t)}_condense(t){for(let i,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(i=t[n-1].children,i.splice(i.indexOf(t[n]),1)):this.clear():r(t[n],this.toBBox)}}}));
